{"version":3,"sources":["types/types.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","notes","active","loading","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","collection","get","notesSnap","forEach","snapHijo","push","data","activeNote","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","value","NotesAppBar","useDispatch","useSelector","className","style","display","onChange","e","files","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeleting","NothingSelected","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","catch","console","log","message","logout","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","LoginScreen","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","prototype","PropTypes","bool","isRequired","func","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.faba6464.chunk.js","sourcesContent":["\r\nexport const types = {\r\n\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew        : '[Notes] New note',\r\n    notesActive        : '[Notes] Set active note',\r\n    notesLoad          : '[Notes] Load notes',\r\n    notesUpdated       : '[Notes] Updated note',\r\n    notesFileUrl       : '[Notes] Updated image url',\r\n    notesDelete        : '[Notes] Delete note',\r\n    noteLogoutCleaning : '[Notes] Logout Cleaning',\r\n\r\n\r\n}","/*\r\n    {\r\n        notes: [],\r\n        active: null,\r\n        active: {\r\n            id: 'HJHJHHHAJDHASD54654',\r\n            title: '',\r\n            body: '',\r\n            imageUrl: '',\r\n            date: 12121456454\r\n        }\r\n    }\r\n*/\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [ ...action.payload ]\r\n            }\r\n        \r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map( \r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            };\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            };\r\n\r\n        case types.noteLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n} ","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\n\r\nexport const uiReducer = ( state =  initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        \r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { createStore, combineReducers, applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(  \r\n        applyMiddleware(thunk)\r\n    )\r\n);\r\n\r\n","\r\nimport { types } from \"../types/types\";\r\n/*\r\n    {\r\n        uid: 'fsdfdsfsfsdfdf444545',\r\n        name: 'Carlos'\r\n    }\r\n*/\r\n\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n\r\n    switch(action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBOm8wGJFacuV-Goquv6mUffIskknA_rGY\",\r\n    authDomain: \"react-app-cursos-34616.firebaseapp.com\",\r\n    projectId: \"react-app-cursos-34616\",\r\n    storageBucket: \"react-app-cursos-34616.appspot.com\",\r\n    messagingSenderId: \"445890518341\",\r\n    appId: \"1:445890518341:web:467e6457bd0a9c0938322c\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","\r\n\r\nexport const fileUpload = async (file) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dq9lyumwg/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        \r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if( resp.ok ){\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n\r\n\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\n\r\n\r\nexport const loadNotes = async ( uid ) => {\r\n\r\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\r\n    const notes = [];\r\n\r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        });\r\n    });\r\n\r\n    return notes;\r\n}\r\n","import Swal from 'sweetalert2'\r\n\r\nimport { db } from '../firebase/firebase-config';\r\nimport { fileUpload } from '../helpers/fileUpload';\r\nimport { loadNotes } from '../helpers/loadNotes';\r\nimport { types } from '../types/types';\r\n\r\n\r\n\r\nexport const startNewNote = () => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid }  = getState().auth;\r\n        \r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${ uid }/journal/notes`).add(newNote);\r\n\r\n        dispatch( activeNote(doc.id, newNote) );\r\n        dispatch( addNewNote(doc.id, newNote) );\r\n    }\r\n}\r\n\r\nexport const activeNote = ( id, note ) => ({\r\n    type : types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type : types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n});\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n\r\n    return async ( dispatch ) => {\r\n\r\n        const notes = await loadNotes( uid);\r\n        dispatch(setNotes(notes));\r\n    }\r\n\r\n}\r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNote = ( note ) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        if ( !note.url ){\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update(noteToFirestore);\r\n\r\n        dispatch(refreshNote( note.id, noteToFirestore ));\r\n        Swal.fire('Saved', note.title, 'success');\r\n    }\r\n}\r\n\r\nexport const refreshNote = ( id, note ) => ({\r\n\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, \r\n        note: {\r\n            id, \r\n            ...note\r\n        }\r\n    }\r\n\r\n});\r\n\r\nexport const startUploading = (file) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { active: activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            willOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch(startSaveNote(activeNote));\r\n\r\n        Swal.close();\r\n    }\r\n};\r\n\r\nexport const startDeleting = ( id ) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\r\n\r\n        dispatch( deleteNote(id) );\r\n    }\r\n\r\n};\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.noteLogoutCleaning\r\n})","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector( state => state.notes );\r\n\r\n    const handleSave = () => {\r\n        dispatch( startSaveNote(active) );\r\n    };\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if( file ) {\r\n            dispatch( startUploading(file));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"notes__appBar\">\r\n\r\n            <span>01 de Junio 2021</span>\r\n\r\n            <input \r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{display: 'none'}}\r\n                onChange={handleFileChange}\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handlePictureClick }\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active:note } = useSelector( state => state.notes );\r\n    const [formValues, handleInputChange, reset ] = useForm(note);\r\n    const { body, title, id} = formValues;\r\n\r\n    const activeId = useRef( note.id );\r\n\r\n    useEffect(() => {\r\n        \r\n        if( note.id !== activeId.current ) {\r\n            reset(note);\r\n            activeId.current = note.id\r\n        }\r\n\r\n    }, [note, reset]);\r\n\r\n    useEffect(() => {\r\n    \r\n        dispatch(activeNote(formValues.id, {...formValues}));\r\n\r\n    }, [formValues, dispatch]);\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting(id) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    name=\"title\"\r\n                    autoComplete=\"off\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n\r\n                {\r\n                    (note.url) \r\n                    && (\r\n                        <div className=\"notes__image\">\r\n                            <img\r\n                                src={note.url}\r\n                                alt=\"imagen\"\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n            </div>\r\n\r\n            <button \r\n                className=\"btn btn-danger\"\r\n                onClick={handleDelete}\r\n            >\r\n                Delete\r\n            </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                pr create an entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const setError = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError,\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})","import Swal from 'sweetalert2'\r\n\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { types } from '../types/types'\r\nimport { finishLoading, startLoading } from './ui';\r\nimport { noteLogout } from '../actions/notes'\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch( startLoading());\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then( ({user}) => {\r\n                dispatch( login(user.uid, user.displayName)); \r\n\r\n                dispatch( finishLoading());\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                dispatch( finishLoading());\r\n                Swal.fire('Error', e.message, 'error');\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name ) => {\r\n    return (dispatch) => {\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then( async ({user}) => {\r\n\r\n                await user.updateProfile({ displayName: name });\r\n\r\n                dispatch( \r\n                    login(user.uid, user.displayName) \r\n                ); \r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                dispatch( finishLoading());\r\n                Swal.fire('Error', e.message, 'error');\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then( ({user}) => {\r\n                dispatch( \r\n                    login(user.uid, user.displayName) \r\n                ); \r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload : {\r\n        uid,\r\n        displayName\r\n    }\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch( logout() );\r\n        dispatch( noteLogout() );\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const noteDate = moment(date);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch( \r\n            activeNote(id, {\r\n                date, title, body, url\r\n            }) \r\n        );\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\r\n            onClick={handleEntryClick}\r\n        >\r\n            \r\n            {\r\n                url &&\r\n                <div \r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${ url })`\r\n                    }}\r\n                ></div>\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    { title }\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    { body }\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{ noteDate.format('dddd') }</span>\r\n                <h4>{ noteDate.format('Do') }</h4>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector( state => state.notes );\r\n    \r\n    return (\r\n        <div className=\"journal__entries\">\r\n            \r\n            {\r\n                notes.map(note => (\r\n                    <JournalEntry \r\n                        key={ note.id } \r\n                        { ...note }\r\n                    />\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector( state => state.auth );\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout());\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNote());\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            \r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> {name} </span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={handleAddNew}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New entry\r\n                </p>\r\n\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector( state => state.notes );\r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            \r\n            <Sidebar/>\r\n\r\n            <main>\r\n\r\n                {\r\n                    ( active ) \r\n                        ? (<NoteScreen />)\r\n                        : (<NothingSelected />)\r\n                }\r\n                \r\n            </main>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading} = useSelector( state => state.ui );\r\n\r\n    const [ formValues, handleInputChange ] = useForm();\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startLoginEmailPassword(email, password) );\r\n    };\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin() );\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form \r\n                onSubmit={handleLogin}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                /> \r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={ loading }\r\n                >\r\n                    Login\r\n                </button>\r\n                \r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link \r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                > \r\n                    Create new account\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import Swal from 'sweetalert2'\r\n\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux';\r\nimport validator from 'validator';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const [ formValues, handleInputChange ] = useForm();\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(isFormValid() ) {\r\n            dispatch( startRegisterWithEmailPasswordName(email, password, name));\r\n        }\r\n        \r\n    };\r\n\r\n    const isFormValid = () => {\r\n\r\n        if( name.trim().length === 0 ){\r\n            dispatch( setError('Name is required'));\r\n            Swal.fire('Error', 'Name is required', 'error');\r\n            return false;\r\n        } else if ( !validator.isEmail(email) ) {\r\n            dispatch(setError('Email is not valid'));\r\n            Swal.fire('Error', 'Email is not valid', 'error');\r\n            return false;\r\n        } else if( password !== password2 || password.length < 5) {\r\n            dispatch(setError('Password should be at least 6 characters and match each other'));\r\n            Swal.fire('Error', 'Password should be at least 6 characters and match each other', 'error');\r\n            return false;\r\n        }\r\n\r\n        dispatch(removeError());\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form \r\n                onSubmit={handleRegister}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value= { name }\r\n                    onChange= {handleInputChange}\r\n                /> \r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value= { email }\r\n                    onChange= {handleInputChange}\r\n                /> \r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value= { password }\r\n                    onChange= {handleInputChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value= { password2 }\r\n                    onChange= {handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n                </button>\r\n                \r\n                \r\n\r\n                <Link\r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                > \r\n                    Already registered?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/login\"\r\n                        component={ LoginScreen }\r\n                    />\r\n\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/register\"\r\n                        component={ RegisterScreen }\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                    ? (<Component {...props}/>)\r\n                    : (<Redirect to=\"/auth/login\" />)\r\n            )}\r\n        />\r\n    )\r\n\r\n}\r\n\r\nPrivateRoute.prototype = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                    ? (<Redirect to=\"/\" />)\r\n                    : (<Component {...props}/>)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.prototype = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n} from 'react-router-dom';\r\n\r\nimport {firebase} from '../firebase/firebase-config'\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\n\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n    useEffect(() => {\r\n        \r\n        firebase.auth().onAuthStateChanged( async (user) => {\r\n\r\n            if( user?.uid ) {\r\n                dispatch( login(user.uid, user.displayName) );\r\n                setIsLoggedIn(true);\r\n\r\n                dispatch(startLoadingNotes(user.uid));\r\n            } else {\r\n                setIsLoggedIn(false);\r\n            }\r\n\r\n            setChecking(false);\r\n\r\n        });\r\n\r\n    }, [dispatch, setChecking, setIsLoggedIn]);\r\n\r\n    if( checking ) {\r\n        return(  \r\n            <h1>Please Wait...</h1>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <Router>\r\n\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        path=\"/auth\"\r\n                        component={AuthRouter}\r\n                        isAuthenticated = {isLoggedIn}\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        exact\r\n                        isAuthenticated = {isLoggedIn}\r\n                        path=\"/\"\r\n                        component={ JournalScreen }\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport { store } from './store/store'\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}